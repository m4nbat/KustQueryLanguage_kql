//create a list of closed incidents to run SLA's against
let closedIncidents = SecurityIncident
| where Status =~ "Closed"
| summarize arg_max(TimeGenerated,*) by IncidentNumber
| distinct IncidentNumber;
//grab the generated time this is when it first arrived in the queue
let stageOne = SecurityIncident
| where IncidentNumber in (closedIncidents)
| where Status =~ "New"
| summarize arg_min(TimeGenerated,*) by IncidentNumber
| project generatedTime = TimeGenerated, IncidentNumber;
//grab the acknowledged time and the person who acknowledged the incident
let stageTwo = SecurityIncident
| where IncidentNumber in (closedIncidents)
| where Status =~ "Active"
| summarize arg_min(TimeGenerated,*) by IncidentNumber
| project acknowledgedTime = TimeGenerated, IncidentNumber, AcknowledgedBy=ModifiedBy
| join stageOne on IncidentNumber;
//grab the closed time, the priority and the person who closed the alert
let stageThree = SecurityIncident
| where IncidentNumber in (closedIncidents)
| where Status =~ "Closed"
| summarize arg_min(TimeGenerated,*) by IncidentNumber
| project closedTime = TimeGenerated, IncidentNumber, ClosedBy=ModifiedBy
| join stageTwo on IncidentNumber;
//grab priorities, created mean time to acknowledge and mean time to close, check MTTA and MTTC was within SLA requirements
let stats = SecurityIncident
| where IncidentNumber in (closedIncidents)
| summarize arg_max(TimeGenerated,*) by IncidentNumber
| join stageThree on IncidentNumber
| extend Priority = toupper(tostring(Labels[0].labelName))
| extend Priority = extract("(P[1-5](\\+)?)",0,Priority)
| where Priority in~ ("P1","P2","P3","P4","P5")
| extend TimeToAcknowledge=(acknowledgedTime-generatedTime)
| extend TimeToClose=(closedTime-generatedTime)
| extend MTTA_SLA = case(TimeToAcknowledge > time("00:30:00") and Priority =~ "P1","P1 SLA Fail",
                        TimeToAcknowledge > time("01:00:00") and Priority =~ "P2","P2 SLA Fail",
                        TimeToAcknowledge > time("04:00:00") and Priority =~ "P3","P3 SLA Fail",
                        TimeToAcknowledge > time("1.00:00:00") and Priority =~ "P4","P4 SLA Fail",
                        "SLA Achieved")
| extend MTTC_SLA = case(TimeToClose > time("12:00:00") and Priority =~ "P1","P1 SLA Fail",
                        TimeToClose > time("1.00:00:00") and Priority =~ "P2","P2 SLA Fail",
                        TimeToClose > time("2.00:00:00") and Priority =~ "P3","P3 SLA Fail",
                        TimeToClose > time("7.00:00:00") and Priority =~ "P4","P4 SLA Fail",
                        "SLA Achieved");
//Get the overall mean time to acknowledge by priority
let MTTA = stats
| summarize MTTA=avg(TimeToAcknowledge) by Priority;
//Get the overall mean time to close by priority
let MTTC = stats
| summarize MTTC=avg(TimeToClose) by Priority;
stats
| project-away IncidentNumber1, IncidentNumber2, IncidentNumber3, TenantId, SourceSystem, Type, IncidentName, Owner
| project Title, Priority, Severity, generatedTime, acknowledgedTime, TimeToAcknowledge, AcknowledgedBy, closedTime, TimeToClose, ClosedBy, MTTA_SLA
| sort by TimeToAcknowledge desc
